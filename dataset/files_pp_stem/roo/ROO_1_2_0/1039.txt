springframework roo support util junit assertequ equal junit assertnul junit asserttru mockito mockito mock mockito mockito file ioexcept except inputstream input stream inputstreamread input stream reader junit test springframework roo support util loader loader unit test link fileutil file util author andrew swan fileutilstest file util test miss file file txt test file file separ file util test txt test expect nullpointerexcept pointer except testgetsystemdependentpathfromnullarrai test system depend path arrai fileutil file util getsystemdependentpath system depend path test expect illegalargumentexcept illeg argument except testgetsystemdependentpathfromnoel test system depend path element fileutil file util getsystemdependentpath system depend path test testgetsystemdependentpathfromoneel test system depend path element assertequ equal foo fileutil file util getsystemdependentpath system depend path foo test testgetsystemdependentpathfrommultipleel test system depend path multipl element expectedpath expect path foo file separ bar assertequ equal expectedpath expect path fileutil file util getsystemdependentpath system depend path foo bar test testgetfileseparatorasregex test file separ regex except set regex fileutil file util getfileseparatorasregex file separ regex currentdirectori current directori file fileutil file util current directori getcanonicalpath canon path invok pathel path element currentdirectori current directori split regex check asserttru pathel path element length test testremovetrailingseparatorfromnullpath test remov trail separ path assertnul fileutil file util removetrailingsepar remov trail separ test testremovetrailingseparatorfromemptypath test remov trail separ empti path assertequ equal fileutil file util removetrailingsepar remov trail separ test testremovetrailingseparatorfrompathwithleadingsepar test remov trail separ path lead separ path file separ foo assertequ equal path fileutil file util removetrailingsepar remov trail separ path test testremovetrailingseparatorfrompathwithmultipletrailingsepar test remov trail separ path multipl trail separ path foo stringutil util repeat file separ assertequ equal foo fileutil file util removetrailingsepar remov trail separ path test expect illegalargumentexcept illeg argument except testensuretrailingseparatorfornullpath test ensur trail separ path fileutil file util ensuretrailingsepar ensur trail separ test testensuretrailingseparatorforemptypath test ensur trail separ empti path assertequ equal file separ fileutil file util ensuretrailingsepar ensur trail separ test testensuretrailingseparatorforpathwithnotrailingsepar test ensur trail separ path trail separ path foo assertequ equal path file separ fileutil file util ensuretrailingsepar ensur trail separ path test testensuretrailingseparatorforpathwithonetrailingsepar test ensur trail separ path trail separ path foo file separ assertequ equal path fileutil file util ensuretrailingsepar ensur trail separ path test testensuretrailingseparatorfrompathwithmultipletrailingsepar test ensur trail separ path multipl trail separ path foo stringutil util repeat file separ assertequ equal foo file separ fileutil file util ensuretrailingsepar ensur trail separ path test testgetcanonicalpathfornullfil test canon path file assertnul fileutil file util getcanonicalpath canon path test expect illegalstateexcept illeg except testgetcanonicalpathforinvalidfil test canon path invalid file except set file invalidfil invalid file mock file invalidfil invalid file getcanonicalpath canon path thenthrow ioexcept except dummi invok fileutil file util getcanonicalpath canon path invalidfil invalid file test testgetcanonicalpathforvalidfil test canon path valid file except set file validfil valid file mock file canonicalpath canon path path validfil valid file getcanonicalpath canon path thenreturn canonicalpath canon path invok actualpath actual path fileutil file util getcanonicalpath canon path validfil valid file check assertequ equal canonicalpath canon path actualpath actual path test testremoveleadingandtrailingseparatorsfromnullpath test remov lead trail separ path assertnul fileutil file util removeleadingandtrailingsepar remov lead trail separ test testremoveleadingandtrailingseparatorsfromemptypath test remov lead trail separ empti path assertequ equal fileutil file util removeleadingandtrailingsepar remov lead trail separ test testremoveleadingandtrailingseparatorsfromplainpath test remov lead trail separ plain path path foo assertequ equal path fileutil file util removeleadingandtrailingsepar remov lead trail separ path test testremoveleadingandtrailingseparatorsfrompathwithboth test remov lead trail separ path set separ stringutil util repeat file separ path separ foo separ invok check assertequ equal foo fileutil file util removeleadingandtrailingsepar remov lead trail separ path test testgetfil test file asserttru fileutil file util getfil file loader test file isfil file test testgetpath test path assertequ equal springframework roo support util loader file util test txt fileutil file util getpath path loader file util test txt test testgetinputstreamoffileinsubdirectori test input stream file directori except invok inputstream input stream inputstream input stream fileutil file util getinputstream input stream loader test file check content filecopyutil file copi util copytostr copi inputstreamread input stream reader inputstream input stream assertequ equal file requir fileutilstest file util test content test expect illegalargumentexcept illeg argument except testgetinputstreamofinvalidfil test input stream invalid file except fileutil file util getinputstream input stream loader miss file assertfirstdirectori directori path expectedfirstdirectori expect directori invok firstdirectori directori fileutil file util getfirstdirectori directori path check assertequ equal expectedfirstdirectori expect directori firstdirectori directori test testgetfirstdirectoryofexistingdirectori test directori exist directori set directori fileutil file util getfil file loader test file getpar parent invok firstdirectori directori fileutil file util getfirstdirectori directori directori check asserttru firstdirectori directori endswith end test testgetfirstdirectoryofexistingfil test directori exist file assertfirstdirectori directori test file test testbackonedirectori test directori assertequ equal foo file separ bar fileutil file util backonedirectori directori foo file separ bar file separ baz file separ 